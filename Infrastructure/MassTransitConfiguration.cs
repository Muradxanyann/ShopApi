using Infrastructure.EventConsumers;
using MassTransit;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace Infrastructure;

public static class MassTransitConfiguration
{
    public static void AddMassTransitServices(this IServiceCollection services, IConfiguration configuration)
    {
        services.AddMassTransit(busConfigurator =>
        {
            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–∞—à –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (consumer)
            busConfigurator.AddConsumer<OrderCreatedConsumer>();
            
            // üÜï –î–û–ë–ê–í–õ–ï–ù–û: –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–±—ã—Ç–∏–π –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö
            busConfigurator.AddConsumer<ProductCreatedConsumer>();

            busConfigurator.UsingRabbitMq((context, rabbitConfigurator) =>
            {
                var connectionString = configuration["MessageBroker:ConnectionString"];
                rabbitConfigurator.Host(new Uri(connectionString!), h =>
                {
                    h.Username("guest");
                    h.Password("guest");
                });

                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è –í–°–ï–• –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Å—å—é–º–µ—Ä–æ–≤
                rabbitConfigurator.ConfigureEndpoints(context);
            });
        });
    }
}
